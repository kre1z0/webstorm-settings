<templateSet group="JavaScript">
  <template name="clg" value="console.log('--&gt;', );" description="console.log" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="class" value="import React, { Component } from 'react';&#10;import { connect } from 'react-redux';&#10;&#10;class Home extends Component {&#10;    render() {&#10;        return (&#10;            &lt;div&gt;&#10;                1&#10;            &lt;/div&gt;&#10;        );&#10;    }&#10;}&#10;&#10;const mapProps = ({ twitch }) =&gt; ({&#10;    twitch,&#10;});&#10;&#10;const mapActions = {};&#10;&#10;export default connect(mapProps, mapActions)(Home);" description="React Component" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="const" value="import React from 'react';&#10;&#10;const Component = () =&gt; {&#10;    return (&#10;        &lt;div&gt;&#10;            componentComponentComponentComponentComponentComponentComponent&#10;        &lt;/div&gt;&#10;    );&#10;};&#10;&#10;export default Component;" description="pure react component" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="for" value="for (i = 0; i &lt; array.length; i++) {&#10;    &#10;}" description="js itterator" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cdm" value="componentDidMount() {&#10;    console.log('--&gt; componentDidMount &lt;--');&#10;}" description="React componentDidMount" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="scu" value="shouldComponentUpdate(nextProps, nextState) {&#10;    console.log('--&gt; shouldComponentUpdate &lt;--');&#10;}" description="React shouldComponentUpdate" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwrp" value="componentWillReceiveProps(nextProps) {&#10;  console.log('--&gt; componentWillReceiveProps &lt;--');&#10;}" description="React componentWillReceiveProps" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwm" value="componentWillMount() {&#10;  console.log('--&gt; componentWillMount &lt;--');&#10;}" description="react componentWillMount" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="cwu" value="componentWillUnmount() {&#10;    console.log('--&gt; componentWillUnmount &lt;--');&#10;}" description="react componentWillUnmount" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="st" value="this.setState({&#10;    key: value,&#10;});" description="react setState() without callback" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="stc" value="this.setState(&#10;    {&#10;        key: value,&#10;    },&#10;    this.setFilterFromDates,&#10;);" description="react setState with callback" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>